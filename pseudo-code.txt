
## the operands-column area
    1 - set the control-area height
    2 - align the two control-columns next to each other
    3 - make the operands-column take 3/4 of the control width
    4 - divide the available vertical space evenly on operands-column items
    5 - Add a 16px gap between the operands-column rows
    6 - divide the available space on each row of the operands-column evenly on its buttons
    7 - add a 16 px gap between the items of each operands-column_row
    8 - expand operands height to fill the available space
    9 - add shadow to operands-buttons

## The operands buttons 
    1 - set the background-color to light--gray
    2 - set the border-radius to 15px
    3 - set the font-size to 24px
    4 - set the font-family to Orbitron;



## The operators-column area
    # Operator-wrapper
        1 - expand operator-wrappers to fill the available space
        2 - add a 16 px gap between the operator-wrappers
        3 - add a light--gray background color to operator-wrappers
        4 - set a 15px border-radius
    # Operators buttons
        1 - Fill the available space of operator-wrapper
        2 - add a light--gray background color to operator-wrappers
        3 - set a 15px border-radius
        4 - Push operator-button by 2px from the edges
        5 - Add a 1px --just-blue solid border
        6 - set the text-color to --just-blue
        7 - Set the font-family to Orbitron
        8 - Set the font-size to 24px


## The things that will be changed when switching between modes (dark-and-light)
    1 - calculator background-color
    2 - mode-switcher img
        - the img itself
        - shadow colors
    3 - display
        - background-color
        - text color
        - shadow colors
    4 - control buttons
        - background color except for equal-button
        - text color for operands only
        - shadow colors
    5 - equal button
        - shadow colors
        - equal-button wrapper's background-color

#->maybe defining classes with the the following probable names
    - light--calculator and dark--calculator
        -- which will keep only the background color for the calculator
    - light--switcher-shadow and dark--switcher-shadow classes,
        -- will change only the background-color
        -- the img should be changed by js by altering the src attribute
    - dark--outer-display and light--outer-display
        -- will have the background-color and shadow of outer-display-container
    - light--inner-display and dark--inner-display
        -- background-color of inner-display-color
        -- display color "the digits color"
    - dark--operand and light--operand
        -- color of operands
        -- background-color of operands
        -- shadow of operands
    - dark--operator-wrapper and light--operator-wrapper
        -- background-color
        -- shadow
    - dark--operator and light--operator
        -- background-color
    - dark--equal-wrapper and light-equal-wrapper
        -- background-color
        -- shadow


## Dark-Light mode switching logic: pseudoCode
    1 - let the light_mode be the default mode
    2 - when user clicks on mode-switcher, the mode should be changed

    <###    Maybe I'll create an object that will hold all those variables     ###>
    3 - Declare variables that stores all the element that should be altered when mode is switched
            -Declare a const var named calculatorContainer and initialize it with its related element
            - Declare a const var named modeSwitcher and initialize it with the mode-img
            - Declare a const var named outerDisplayContainer and initialize it with its related container
            - Declare a const var named innerDisplayContainer and initialize it with its related container
            - Declare a const arr named operandsList and stores in it all the buttons in operands-column
            - Declare a const arr named operatorWrappersList and stores inside it all the operator-wrappers
            - Declare a const arr named operatorsList and stores inside it all the operators
            - Declare a const var named equalBtnWrapper and stores inside it the equal button
    4 - Declare an obj named currentMode and add a `status: "light"`;
    5 - Declare two functions switchToLightMode(obj) and switchToDarkMode(obj) that will take currentMode obj as argument
            
            ################################
            switchToLightMode(mode) function:
                For calculatorContainer
                    remove the `.dark--calculator` class
                    add `.light-calculator` class
                For modeSwitcher
                    change the modeSwitcher img to `.light-mode-switcher.png`
                    remove the `.dark--switcher` class
                    add the `.light--switcher` class
                For outerDisplayContainer
                    remove `.dark--outer-display` class
                    add `.light--outer-display` class
                For innerDisplayContainer
                    remove  : .dark--inner-display
                    add     : .light--inner-display
                For each element in operandsList
                    remove  : .dark--operand
                    add     : .light--operand
                For  operatorWrappersList
                    remove  : .dark--operator-wrapper
                    add     : .light--operator-wrapper
                For  operatorsList
                    remove  : .dark--operator
                    add     : .light--operator
                For  equalBtnWrapper
                    remove  : .dark--equal-wrapper
                    add     : .light--equal-wrapper 

                change the mode.status key to `light`


            
            ################################
            switchToDarkMode(mode) function:
                For calculatorContainer
                    remove `.light-calculator` class
                    add the `.dark--calculator` class
                For modeSwitcher
                    change the modeSwitcher img to `.dark-mode-switcher.png`
                    remove the `.light--switcher` class
                    add the `.dark--switcher` class
                For outerDisplayContainer
                    remove `.light--outer-display` class
                    add `.dark--outer-display` class
                For innerDisplayContainer
                    remove     : .light--inner-display
                    add  : .dark--inner-display
                For each element in operandsList
                    remove     : .light--operand
                    add  : .dark--operand
                For  operatorWrappersList
                    remove     : .light--operator-wrapper
                    add  : .dark--operator-wrapper
                For  operatorsList
                    remove     : .light--operator
                    add  : .dark--operator
                For  equalBtnWrapper
                    remove    : .light--equal-wrapper 
                    add  : .dark--equal-wrapper


                change the mode.status key to `dark`

    6 - If user clicks modeSwitcher with `status: "light"` call switchToDarkMode() function
    7 - Else If user clicks modeSwitcher with `status: "dark"` call switchToLightMode() function

    

    
